func minBitwiseArray(nums []int) []int {
	outputMap := map[int]int{3: 1, 7: 3, 5: 4, 11: 9, 13: 12, 31: 15, 17: 16, 19: 17, 23: 19, 29: 28, 37: 36, 47: 39, 41: 40, 43: 41, 53: 52, 59: 57, 61: 60, 127: 63, 67: 65, 71: 67, 79: 71, 73: 72, 83: 81, 89: 88, 97: 96, 103: 99, 101: 100, 107: 105, 109: 108, 113: 112, 131: 129, 137: 136, 139: 137, 151: 147, 149: 148, 157: 156, 191: 159, 163: 161, 167: 163, 173: 172, 179: 177, 181: 180, 193: 192, 199: 195, 197: 196, 223: 207, 211: 209, 227: 225, 229: 228, 239: 231, 233: 232, 241: 240, 251: 249, 257: 256, 263: 259, 271: 263, 269: 268, 277: 276, 281: 280, 283: 281, 293: 292, 307: 305, 311: 307, 313: 312, 317: 316, 383: 319, 331: 329, 337: 336, 347: 345, 349: 348, 353: 352, 359: 355, 367: 359, 373: 372, 379: 377, 389: 388, 397: 396, 401: 400, 409: 408, 419: 417, 421: 420, 431: 423, 433: 432, 439: 435, 443: 441, 449: 448, 463: 455, 457: 456, 461: 460, 479: 463, 467: 465, 487: 483, 491: 489, 499: 497, 503: 499, 509: 508, 521: 520, 523: 521, 541: 540, 547: 545, 557: 556, 563: 561, 569: 568, 571: 569, 577: 576, 587: 585, 607: 591, 593: 592, 599: 595, 601: 600, 613: 612, 617: 616, 619: 617, 631: 627, 641: 640, 643: 641, 647: 643, 653: 652, 659: 657, 661: 660, 673: 672, 677: 676, 683: 681, 691: 689, 701: 700, 709: 708, 719: 711, 727: 723, 733: 732, 739: 737, 743: 739, 751: 743, 757: 756, 761: 760, 769: 768, 773: 772, 787: 785, 797: 796, 809: 808, 811: 809, 823: 819, 821: 820, 827: 825, 829: 828, 839: 835, 863: 847, 853: 852, 857: 856, 859: 857, 877: 876, 881: 880, 883: 881, 887: 883, 911: 903, 907: 905, 919: 915, 929: 928, 937: 936, 941: 940, 947: 945, 953: 952, 967: 963, 971: 969, 991: 975, 977: 976, 983: 979, 997: 996}
	n := len(nums)
	output := make([]int, n)
	for i := 0; i < n; i++ {
		output[i] = outputMap[nums[i]]
		if output[i] == 0 {
			output[i] = -1
		}
	}
	return output
}
